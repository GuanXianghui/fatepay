<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.0.dtd">

<struts>
    <!-- 开发模式 -->
    <constant name="struts.devMode" value="true"/>
    <!-- 标注struts请求地址以do结尾 -->
    <constant name="struts.action.extension" value="do"/>
    <!--
    1.引入struts2-spring-plugin-x.x.x.jar
    2.该jar包中包含struts-plugin.xml配置文件，该配置文件中有一如下静态配置(struts.xml中无需再次配置)
    <constant name="struts.objectFactory" value="spring" />
    3.该配置，告知struts，struts的action由spring创建或装配，这样才能注入Resource的属性
    4.如struts.xml中action的配置：<action name="test" class="testAction">
    当创建一个对象的时候，它会用Struts2配置文件中的class属性(testAction)去和Spring配置文件中的id属性进行关联
    (这里class TestAction使用注解@Component("testAction"))，如果能找到，则由Spring创建，否则由Struts 2框架自身创建
    (比如com.fatepay.TestAction)，然后由Spring来装配，一样会注入Resource的属性。
     -->
    <!-- struts包描述 继承默认包struts-default 命名空间为/ -->
    <package name="default" namespace="/" extends="struts-default">
        <!-- 参考模版 -->
        <!--<action name="updateDiary" class="com.gxx.oa.UpdateDiaryAction">-->
            <!--<result>-->
                <!--/showDiary.jsp?id=${diaryId}-->
            <!--</result>-->
            <!--<result name="error">-->
                <!--/showDiary.jsp?id=${diaryId}-->
            <!--</result>-->
        <!--</action>-->

        <!-- class="transAction"，根据"transAction"到spring中找bean，有则有spring生成，注入需注入的Resource -->
        <!-- 如果找不到，比如，class="com.fatepay.TestAction"，则根据class，new一个对象 -->
        <!-- 测试Action -->
        <action name="test" class="testAction">
            <result>
                /test.jsp
            </result>
            <result name="error">
                /test.jsp
            </result>
        </action>

        <!-- 交易Action -->
        <action name="trans" class="transAction">
            <result name="result">
                /result.jsp
            </result>
            <result name="jump">
                /jump.jsp
            </result>
        </action>

        <!-- 支付返回前台Action -->
        <action name="payReturnPg" class="payReturnPgAction">
            <result name="result">
                /result.jsp
            </result>
            <result name="jump">
                /jump.jsp
            </result>
        </action>

        <!-- 支付返回后台Action -->
        <action name="payReturnBg" class="payReturnBgAction">
        </action>

        <!-- 强制单笔交易查询Action -->
        <action name="forceSingleQuery" class="forceSingleQueryAction">
        </action>
    </package>
</struts>



